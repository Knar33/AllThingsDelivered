@using AllThingsDelivered.Models
@model Checkout
@{
    ViewBag.Title = "Index";
}

@using (Html.BeginForm("Finalize", "Checkout"))
{
    @Html.AntiForgeryToken();
    <div class="form-group">
        @Html.LabelFor(m => m.customize, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.customize, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.customize)
    </div>
    
    <h3>Default Address:</h3><br />
    foreach (CustomerAddress address in (Model.customer.CustomerAddresses.Where(x => x.DefaultAddr)))
    {
        if (!address.Address.Deleted)
        {
            <input type="radio" name="address" value="@address.AddressID" checked /><br />
            @address.Address.Line1<br />
            if (address.Address.Line2 != null)
            {
                @address.Address.Line2<br />
            }
            @address.Address.City<br />
            @address.Address.State<br />
            @address.Address.ZipCode<br />
            @address.Address.Country
            <br /><br />
        }
    }
    if ((Model.customer.CustomerAddresses.Where(x => !x.DefaultAddr).Count() > 0))
    {
        <h3>Other Addresses:</h3><br />
    }
    foreach (CustomerAddress address in (Model.customer.CustomerAddresses.Where(x => !x.DefaultAddr)))
    {
        if (!address.Address.Deleted)
        {
            <input type="radio" name="address" value="@address.AddressID" /><br />
            @address.Address.Line1<br />
            if (address.Address.Line2 != null)
            {
                @address.Address.Line2<br />
            }
            @address.Address.City<br />
            @address.Address.State<br />
            @address.Address.ZipCode<br />
            @address.Address.Country<br />
            <br /><br />
        }
    }

    <h3>Select a payment method:</h3><br />

    var primaryID = Model.payment.primaryMethod.Token;
    if (Model.payment.primaryMethod.GetType() == typeof(Braintree.CreditCard))
    {
        <input type="radio" name="paymentMethod" value="@primaryID" checked /><h4>Credit Card</h4>
        var castedPrimary = (Braintree.CreditCard)Model.payment.primaryMethod;
        <text>Card Type: </text>@castedPrimary.CardType<br />
        <text>Card: **** **** **** </text>@castedPrimary.LastFour<br />
    }
    if (Model.payment.primaryMethod.GetType() == typeof(Braintree.PayPalAccount))
    {
        <input type="radio" name="paymentMethod" value="@primaryID" checked /><h4>Paypal</h4>
        var castedPrimary = (Braintree.PayPalAccount)Model.payment.primaryMethod;
        <text>Email Address: </text>@castedPrimary.Email<br />
    }

    foreach (Braintree.PaymentMethod method in Model.payment.methods)
    {
        if (method.GetType() == typeof(Braintree.CreditCard))
        {
            var castedMethod = (Braintree.CreditCard)method;
            if (castedMethod.IsDefault == null || castedMethod.IsDefault != true)
            {
                <input type="radio" name="paymentMethod" value="@method.Token" /><h4>Credit Card</h4>
                <text>Card Type: </text>@castedMethod.CardType<br />
                <text>Card: **** **** **** </text>@castedMethod.LastFour<br />
            }
        }
        if (method.GetType() == typeof(Braintree.PayPalAccount))
        {
            var castedMethod = (Braintree.PayPalAccount)method;
            if (castedMethod.IsDefault == null || castedMethod.IsDefault != true)
            {
                <input type="radio" name="paymentMethod" value="@method.Token" /><h4>Paypal</h4>
                <text>Email Address: </text>@castedMethod.Email<br />
            }
        }
    }

    <input type="submit" value="Check Out" />
}